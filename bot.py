import logging
import os
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
from aiogram.enums import ContentType
from aiogram.utils.markdown import hbold
from dotenv import load_dotenv

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞ —Ç–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN, parse_mode="HTML")
dp = Dispatcher()

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
main_menu = ReplyKeyboardMarkup(resize_keyboard=True)
main_menu.row(KeyboardButton("üîã –ó–∞–ø—Ä–∞–≤–∏—Ç–∏—Å—å"), KeyboardButton("üìã –ú–æ—ó –∑–∞—è–≤–∫–∏"))
main_menu.row(KeyboardButton("üí∞ –ê–∫—Ç—É–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞"), KeyboardButton("‚ÑπÔ∏è –î–æ–ø–æ–º–æ–≥–∞"))

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
@dp.message(Command("start"))
async def start_command(message: types.Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(
        KeyboardButton("üì± –ù–∞–¥–∞—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É", request_contact=True)
    )
    await message.answer(
        f"–ü—Ä–∏–≤—ñ—Ç, {hbold(message.from_user.full_name)}! –î–ª—è –ø–æ—á–∞—Ç–∫—É —Ä–æ–±–æ—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Å—è, –ø–æ–¥—ñ–ª–∏—Å—è —Å–≤–æ—ó–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É:",
        reply_markup=keyboard
    )

@dp.message(lambda message: message.contact, ContentType.CONTACT)
async def phone_handler(message: types.Message):
    user_phone = message.contact.phone_number
    user_id = message.from_user.id
    # –¢—É—Ç –º–æ–∂–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ –Ω–æ–º–µ—Ä –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
    await message.answer(f"–î—è–∫—É—é! –¢–µ–ø–µ—Ä —Ç–∏ –º–æ–∂–µ—à –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –≤—Å—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –±–æ—Ç–∞.", reply_markup=main_menu)

# –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ó–∞–ø—Ä–∞–≤–∏—Ç–∏—Å—å"
@dp.message(lambda message: message.text == "üîã –ó–∞–ø—Ä–∞–≤–∏—Ç–∏—Å—å")
async def request_fuel(message: types.Message):
    fuel_menu = ReplyKeyboardMarkup(resize_keyboard=True).row(
        KeyboardButton("–ê–ó–° ‚Ññ1"), KeyboardButton("–ê–ó–° ‚Ññ2"), KeyboardButton("–ê–ó–° ‚Ññ3")
    )
    await message.answer("–í–∏–±–µ—Ä–∏ —Å–≤–æ—é –∑–∞–ø—Ä–∞–≤–∫—É:", reply_markup=fuel_menu)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    try:
        await bot.delete_webhook(drop_pending_updates=True)
        await dp.start_polling(bot)
    except Exception as e:
        logging.error(f"–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞: {e}")

if __name__ == "__main__":
    asyncio.run(main())
