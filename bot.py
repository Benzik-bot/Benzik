import logging
import os
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from asyncio
from dotenv import load_dotenv

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
main_menu = ReplyKeyboardMarkup(resize_keyboard=True)
main_menu.add("üîã –ó–∞–ø—Ä–∞–≤–∏—Ç–∏—Å—å", "üìã –ú–æ—ó –∑–∞—è–≤–∫–∏")
main_menu.add("üí∞ –ê–∫—Ç—É–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞", "‚ÑπÔ∏è –î–æ–ø–æ–º–æ–≥–∞")

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(
        KeyboardButton("üì± –ù–∞–¥–∞—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É", request_contact=True)
    )
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! –î–ª—è –ø–æ—á–∞—Ç–∫—É —Ä–æ–±–æ—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Å—è, –ø–æ–¥—ñ–ª–∏—Å—è —Å–≤–æ—ó–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É:",
                         reply_markup=keyboard)

@dp.message_handler(content_types=types.ContentType.CONTACT)
async def phone_handler(message: types.Message):
    user_phone = message.contact.phone_number
    user_id = message.from_user.id
    # –¢—É—Ç –º–æ–∂–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ –Ω–æ–º–µ—Ä –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
    await message.answer("–î—è–∫—É—é! –¢–µ–ø–µ—Ä —Ç–∏ –º–æ–∂–µ—à –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –≤—Å—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –±–æ—Ç–∞.", reply_markup=main_menu)

# –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ó–∞–ø—Ä–∞–≤–∏—Ç–∏—Å—å"
@dp.message_handler(lambda message: message.text == "üîã –ó–∞–ø—Ä–∞–≤–∏—Ç–∏—Å—å")
async def request_fuel(message: types.Message):
    await message.answer("–í–∏–±–µ—Ä–∏ —Å–≤–æ—é –∑–∞–ø—Ä–∞–≤–∫—É:", reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add(
        "–ê–ó–° ‚Ññ1", "–ê–ó–° ‚Ññ2", "–ê–ó–° ‚Ññ3"))

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
